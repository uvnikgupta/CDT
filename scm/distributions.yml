- type: 1
  func: f"LogLogistic(alpha={random.randint(5, 20)}, beta={round(random.uniform(1,3.5),1)})"
- type: 1
  func: f"Normal(mean={random.randint(0,10)}, std={round(random.uniform(1,20),2)})"
- type: 1
  func: f"LogNormal(mean={random.randint(0,10)}, std={round(random.uniform(1,20),2)})"
- type: 1
  func: f"Benini(alpha={round(random.uniform(.1, 1.0), 1)}, beta={round(random.uniform(.1, 1.0), 1)}, sigma={round(random.uniform(.1, 1.0), 1)})"
- type: 1
  func: f"Beta(alpha={round(random.uniform(.1, 1.0), 1)}, beta={round(random.uniform(.1, 1.0), 1)})"
- type: 1
  func: f"Exponential(rate={round(random.uniform(.5, 10.0), 1)})"
- type: 1
  func: f"FDistribution(d1={random.randint(2, 4)}, d2={random.randint(5, 8)})"
- type: 1
  func: f"Gamma(k={round(random.uniform(0.1, 4.0), 1)}, theta={round(random.uniform(2.0, 8.0), 1)})"
- type: 1
  func: f"GammaInverse(a={random.randint(1, 4)}, b={random.randint(2, 8)})"
- type: 1
  func: f"Bernoulli({round(random.random(), 1)})"
- type: 2
  func: f"Binomial(n={random.randint(10, 20)}, p={round(random.uniform(0.05, 1.00), 2)}, succ={random.randint(2, 10)})"
- type: 2
  func: f"BetaBinomial(n={random.randint(10, 100)}, alpha={round(random.uniform(.1, 1.0), 1)}, beta={round(random.uniform(2, 5),1)})"
- type: 2
  func: f"Die(sides={random.randint(4, 10)})"
- type: 2
  func: f"FiniteRV({{1:0.33, 2:0.34, 3:0.33}})"
- type: 2
  func: f"Geometric(p={round(random.uniform(0.05, 1.00), 2)})"
- type: 2
  func: f"Poisson(lamda={round(random.uniform(0.05, 1.00), 1)})"
- type: 2
  func: f"FiniteRV({{{random.randint(5, 10)}:0.5, {random.randint(0, 3)}:0.16, {random.randint(15, 25)}:0.17, {random.randint(30, 50)}:0.17}})"